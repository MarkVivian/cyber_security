                            MSFCONSOLE.
                        ==================
- The msfconsole is the command-line interface for interacting with the Metasploit Framework.
- It supports many familiar Linux commands but has some limitations, like no output redirection.
- This powerful tool allows users to search, configure, and launch exploits as well as manage post-exploitation tasks. 


        BASIC COMMAND AND FEATURES.
    ---------------------------------
1. General Command Support.
    - It supports most Linux commands like clear for clearing the terminal.
    - It allows tab completion for auto-suggestions of commands or modules.

2. Help System.
    - Use the help command to access guidance on any command.
        EG.
            help set.

                - This command will provide detailed usage instructions for the set command, such as options for global datastore management.

3. History Command.
    - Lists the previously used commands, which is helpful for tracking the steps of an attack or experiment.
        EG.
            history

4. Context-specific settings.
    - When working in msfconsole, settings are maintained within the context of the selected module.
    - If you change modules, previously set variables (e.g., RHOSTS) will not carry over unless defined globally.
    - In the example below, we have used the ms17_010_eternalblue exploit, and we have set parameters such as RHOSTS.
    - If we were to switch to another module (e.g. a port scanner), we would need to set the RHOSTS value again as all changes we have made remained in the context of the ms17_010_eternalblue exploit. 


            USING MODULES IN CONTEXT.
        -------------------------------
- Once a module is selected, the prompt changes to indicate the context in which you are working.
- For example, after using the MS17-010 EternalBlue exploit, the prompt changes to reflect the exploit module:
    EG.
        # example of selecting a module.
        use exploit/windows/smb/ms17_010_eternalblue

            - The console prompt changes to indicate that you are now working with the MS17-010 EternalBlue exploit:   
                EG.
                    [msf6](Jobs:0 Agents:0) exploit(windows/smb/ms17_010_eternalblue) >>

                        - You can still use regular shell commands within this context, such as ls, while also having specific Metasploit commands available.
                        - While the prompt has changed, you will notice we can still run the commands previously mentioned.
                        - This means we did not "enter" a folder as you would typically expect in an operating system command line.
                            EG.
                                exploit(windows/smb/ms17_010_eternalblue) >> ls
                                [*] exec: ls

                                Desktop    Downloads  Pictures  Templates
                                Documents  Music      Public    Videos
                                [msf](Jobs:0 Agents:0)
                                exploit(windows/smb/ms17_010_eternalblue) >>


                    VIEWING MODULE OPTIONS.
                -------------------------------
-  This command displays all the parameters required for the selected module, both for the exploit and the payload.
    EG.
        show options 

            - This will list settings like RHOSTS (target IP), SESSION and LHOST (attacker’s IP).


- The show command can be used in any context followed by a module type (auxiliary, payload, exploit, etc.) to list available modules.
- The example below lists payloads that can be used with the ms17-010 Eternalblue exploit.
    EG.
        [msf](Jobs:0 Agents:0) exploit(windows/smb/ms17_010_eternalblue) >> show payloads


- You can leave the context using the back command.
    EG.
        msf6 exploit(windows/smb/ms17_010_eternalblue) > back
        msf6 >      


- Further information on any module can be obtained by typing the info command within its context. 
    EG.
        msf6 exploit(windows/smb/ms17_010_eternalblue) > info


- Alternatively, you can use the info command followed by the module’s path from the msfconsole prompt.
    EG.
        info exploit/windows/smb/ms17_010_eternalblue
            
            - Info is not a help menu; it will display detailed information on the module such as its author, relevant sources, etc.


                    SEARCH FOR MODULES.
                -------------------------
- Use search to locate modules related to a specific vulnerability, exploit, or CVE.
- You can narrow down results by specifying a module type or platform.
    EG.
        msf6 > search ms17-010

            - This will return all related exploits, auxiliary modules, and scanners for the MS17-010 vulnerability.
            - You may notice the “name” column already gives more information than just the module name.
            - You can see the type of module (auxiliary, exploit, etc.) and the category of the module (scanner, admin, windows, Unix, etc.).
            - You can use any module returned in a search result with the command use followed by the number at the beginning of the result line.
                EG.
                    # instead of use auxiliary/admin/smb/ms17_010_command
                     use 0 


- Another essential piece of information returned is in the “rank” column.
- Exploits are rated based on their reliability.
- The table below provides their respective descriptions.

    ExcellentRanking: 
        > exploit will never crash the service. This is the case for SQL Injection, CMD execution, RFI, LFI, etc.
        > No typical memory corruption exploits should be given this ranking unless there are extraordinary circumstances (WMF Escape()).

    GreatRanking:
        > The exploit has a default target AND either auto-detects the appropriate target or uses an application-specific return address AFTER a version check.
    
    GoodRanking
        >The exploit has a default target and it is the "common case" for this type of software (English, Windows 7 for a desktop app, 2012 for server, etc).
    
    NormalRanking	
        > The exploit is otherwise reliable, but depends on a specific version and can't (or doesn't) reliably autodetect.
    
    AverageRanking
        > The exploit is generally unreliable or difficult to exploit.
    
    LowRanking: 
        >The exploit is nearly impossible to exploit (or under 50% success rate) for common platforms.
    
    ManualRanking:
        > The exploit is unstable or difficult to exploit and is basically a DoS.
        > This ranking is also used when the module has no use unless specifically configured by the user (e.g.: exploit/unix/webapp/php_eval).


- You can direct the search function using keywords such as type and platform.

- For example, if we wanted our search results to only include auxiliary modules, we could set the type to auxiliary. The screenshot below shows the output of the search type:auxiliary telnet command. 
    EG.
        msf6 > search type:auxiliary telnet

        - Please remember that exploits take advantage of a vulnerability on the target system and may always show unexpected behavior.
        - A low-ranking exploit may work perfectly, and an excellent ranked exploit may not, or worse, crash the target system.





