                    OUTFILE
                ==============
- The Out-File cmdlet in PowerShell allows you to redirect the output of commands or scripts to a file. 
    EG.
        Get-Process | Out-File processes.txt


                KEY FEATURES
            ====================
1) Overwrite vs appending.
    - by default the outfile overwrites any existing file with the same name.
    - You can use -Append to add the output to the end of an existing file.
        EG.
            Get-ChildItem | Out-File -Append file_list.txt


2) using write ouput 
    - Outputs to the pipeline, can be captured by Out-File or redirection operators.
        EG.
            Write-Output "Please stop ... come on" | Out-File ".\test.txt"


2) Encoding Control.
    - By default, Out-File uses the system's default encoding
    - You can specify the desired encoding using -Encoding to ensure proper handling of special characters
        EG.
            Get-Content $filePath -Encoding UTF8 | Out-File encoded_file.txt


3) Appending Multiple lines
    EG.
        @"
        Line 1
        Line 2
        Line 3
        "@ | Out-File -FilePath "C:\path\to\your\file.txt" -Append


                    ADD-CONTENT
                ===================
1) The Add-Content cmdlet is specifically designed for appending content to a file.  
    EG. 
        Add-Content -Path "path\to\file" -Value "New content to append."


2) Appending multiple lines.
    EG. 
        $lines = @(
            "Line 1",
            "Line 2",
            "Line 3"
        )
        Add-Content -Path "C:\path\to\your\file.txt" -Value $lines


3) Appending text with timestamp.
    EG.
        $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        $content = "[$timestamp] New log entry"
        Add-Content -Path "C:\path\to\your\log.txt" -Value $content
 