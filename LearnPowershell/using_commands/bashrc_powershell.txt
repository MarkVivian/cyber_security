                    $PROFILE
                ==============
- the $profile in PowerShell works similarly to the .bashrc file in Linux. 
- Both are configuration files that are used to customize the user's shell environment.
- but the directory structure might not be created yet so you should create it if it doesn't exist.
- it makes persistency of commands.
- $PROFILE is a special automatic variable that points to a PowerShell script that runs every time you start a PowerShell session.
- You can use it to:
    > Define custom aliases and functions
    > Load tools and scripts automatically
    > Customize the PowerShell prompt
    > Set environment variables
    > Pre-load modules
    > Enable autocomplete, history behavior, logging, etc.


        LOCATION OF $PROFILE.
    ------------------------------
EG.
    $PROFILE 
        OR 
    $PROFILE.CurrentUserCurrentHosts
         
        > Usually evaluates to : 
            EG.
                C:\Users\YourName\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1

                    > This is the current-user, current-host profile.
        
        > There are other variations like:
            - $PROFILE.AllUsersCurrentHost. # All users, current Host.
            - $PROFILE.CurrentUserAllHosts. # Current User, All Hosts
            - $PROFILE.AllUsersAllHosts # All users, All hosts.
                
                > But for now, just focus on $PROFILE.


        How To Create or Open it.
    ---------------------------------
EG.
    # Check if it exists
    Test-Path $PROFILE

    # Create it if missing
    if (!(Test-Path $PROFILE)) {
        New-Item -ItemType File -Path $PROFILE -Force
            OR 
        # new-item -type directory -path C:\Users\<username>\Documents\PowerShell
        #    AND 
        # new-item -type file -path C:\Users\<username>\Documents\PowerShell\Microsoft.PowerShell_profile.ps1
    }

    # Open in editor
    notepad $PROFILE


            WHAT YOU CAN PUT IN YOUR PROFILE.
        --------------------------------------
1. Add useful aliases.
    EG.
        Set-Alias ll Get-ChildItem
        Set-Alias grep Select-String
        Set-Alias cat Get-Content
        Set-Alias gs Get-Service


2. Add custom Functions.
    EG.
        function ipconfigfancy {
            Get-NetIPAddress | Where-Object { $_.AddressFamily -eq 'IPv4' -and $_.PrefixOrigin -ne 'WellKnown' }
        }

        function psports {
            Get-NetTCPConnection | Group-Object -Property State
        }


3. Customize the prompt.
    - Override the default prompt.
        EG.
            function prompt {
                "$env:USERNAME@$env:COMPUTERNAME PS> "
            }

    - Or use colors.
        EG.
            function prompt {
                Write-Host ("PS " + $(Get-Location) + ">") -ForegroundColor Cyan -NoNewline
                return " "
            }


4. Load tools or scripts Automatically.
    EG.
        # Auto-import module if present
        if (Get-Module -ListAvailable -Name PowerUp) {
            Import-Module PowerUp
        }

        # Auto-run a recon script
        $reconScript = "$HOME\scripts\startup-recon.ps1"
        if (Test-Path $reconScript) {
            . $reconScript
        }


5. Set Environment Variables.
    EG.
        $env:EDITOR = "notepad"
        $env:PATH += ";C:\Tools\custom\bin"


6. Disable Beeps and Set History Options.
    EG.
        Set-PSReadlineOption -BellStyle None
        Set-PSReadlineOption -HistorySaveStyle SaveIncrementally


7. OS Detection Logic (Useful for profiles on Multiple Machines)
    EG.
        if ($env:OS -like "*Windows*") {
            Write-Host "You're on Windows" -ForegroundColor Green
        } else {
            Write-Host "You're not on Windows?!?" -ForegroundColor Red
        }


8. Preload Exploit or pentest Tools (Ethically, of course)
    EG.
        if (Test-Path "$env:USERPROFILE\tools\PowerUp.ps1") {
            . "$env:USERPROFILE\tools\PowerUp.ps1"
        }

        if (Test-Path "$env:USERPROFILE\tools\winPEAS.bat") {
            Set-Alias winpeas "$env:USERPROFILE\tools\winPEAS.bat"
        }


