                                REGULAR EXPRESSION (REGEX)
                            ==================================
- This are powerful tool for pattern matching and text manipuulation.
- They provide a concise and flexible way to describe and search for text pattern within strings.
- We use =~ for matching regex.


                NUMBER PATTERN BREAKDOWN.
            ---------------------------------
- Lets say we want numbers ranging from 10 - 39.
    EG. 
        if [[ $number =~ ^([1-3][0-9])$ ]]

            - [1-3]: Matches any digit from 1 to 3 as the first digit.
            - [0-9]: Matches any digit from 0 to 9 as the second digit.
            - This pattern matches:
                > Numbers from 10 to 19 (when the first digit is 1).
                > Numbers from 20 to 29 (when the first digit is 2).
                > Numbers from 30 to 39 (when the first digit is 3).

            - So, [1-3][0-9] matches all numbers from 10 to 39.


- Lets say we want numbers ranging from 10-19 and 30-39
    EG.
        if [[ $number =~ ^([13][0-9])$ ]]

            - [13]: Matches either 1 or 3 as the first digit.
            - [0-9]: Matches any digit from 0 to 9 as the second digit.
            - This pattern matches:
                > Numbers from 10 to 19 (when the first digit is 1).
                > Numbers from 30 to 39 (when the first digit is 3).

            - It does not match numbers from 20 to 29 because the first digit cannot be 2 in this pattern.


- Lets say we want numbers ranging from 0 to 99.
    EG.
        if [[ $number =~ ^([0-9]|[1-9][0-9])$ ]]; then 

            - [0-9] matches numbers from 0 to 9.
            - [0-9]: Matches any single digit from 0 to 9.
            - [1-9][0-9]: Matches any two-digit number from 10 to 99:
                > [1-9]: Matches the first digit from 1 to 9 (cannot be 0).
                > [0-9]: Matches the second digit from 0 to 9.

            - |: Logical OR, combining the two alternatives.
            - $: End of the string.


- Lets take any number.
    EG.
        if [[ $number =~ ^[0-9]+$ ]]; then

            ^: matches the beginning of the string.
            [0-9]: matches any single digit from 0 to 9.
            + : matches one or more occurrences of the preceding element ([0-9]).
            $ : matches the end of the string.

            - The ^[0-9]+$ pattern effectively checks if a string:
                - Starts with a digit.
                - Contains one or more digits.
                - Ends with a digit.


- Lets say you want characters !#& which may occur in different orders.
    EG.
        if [[ $number =~ ^[!#&]+$ ]]

            - ^: Asserts the start of the string.
            - [!#&]: A character class that matches any single character that is either !, #, or &.
            - +: Matches one or more of the preceding character class [!#&].
            - $: Asserts the end of the string.